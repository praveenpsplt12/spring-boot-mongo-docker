node{
	def buildNumber = BUILD_NUMBER
    	stage("Git CheckOut"){
        	git 'https://github.com/praveenpsplt12/spring-boot-mongo-docker.git'
   	 }
    
   	stage(" Maven Clean Package"){
     		def mavenHome =  tool name: "Maven", type: "maven"
      		def mavenCMD = "${mavenHome}/bin/mvn"
      		sh "${mavenCMD} clean package"
    	} 
    	stage("Build Dokcer Image") {
        	"docker build -t praveenpsplt12/spring-boot-mongo-docker:${buildNumber} ."
    	}
    
    	stage("Docker Push"){
        	withCredentials([string(credentialsId: 'Docker_Hub_Pwd', variable: 'Docker_Hub_Pwd')]) {
          	sh "docker login -u dockerhandson -p ${Docker_Hub_Pwd}"
        	}
        	sh "docker push praveenpsplt12/spring-boot-mongo-docker:${buildNumber}"
        
    	}
    
   	 // Remove local image in Jenkins Server
   	 stage("Remove Local Image"){
        	sh "docker rmi -f praveenpsplt12/spring-boot-mongo-docker:${buildNumber}"
    	}
    
    	stage("Deploy to docker swarm cluster"){
        	sshagent(['Docker_Swarm_Manager_Dev']) {
		    sh 'scp -o StrictHostKeyChecking=no  docker-compose.yml ubuntu@172.31.47.232:'
		    //sh 'ssh -o StrictHostKeyChecking=no ubuntu@172.31.47.232 docker stack rm springboot'
                    sh 'ssh -o StrictHostKeyChecking=no ubuntu@172.31.47.232 docker stack deploy --prune --compose-file docker-compose.yml springboot'
        	}
    	}
}
